public int longestSubStringWithEqualRepeatingChars(String s){
		int max = 1;
		int[] count = new int[26];

		for(int i=0; i<s.length(); i++){
			Arrays.fill(count, 0);
			count[s.charAt(i) - 'a'] = 1;

			for(int j=i+1; j<s.length(); j++){
				count[s.charAt(i) - 'a'] += 1;

				if(allEqualOccurences(count, count[s.charAt(i) - 'a'])){
					int size = j - i + 1;
					max = Math.max(max, size);
				}
			}
		}
		return max;
	}

	private boolean allEqualOccurences(int[] count, int freqOfAnyCharInSubString){

			boolean allEqual = true;
			for(int freq : count){
				if(freq > 0 && freq != freqOfAnyCharInSubString) return false;
			}

			return true;
	}
